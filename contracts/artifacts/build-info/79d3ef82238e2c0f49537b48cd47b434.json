{
	"id": "79d3ef82238e2c0f49537b48cd47b434",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FundmeContract.sol": {
				"content": "//SPDX-License-Identifier:MIT\n\npragma solidity ^0.8.7;\n\n\n error NotOwner();\n\ncontract FundMe{\n   uint256 constant MinimumLocalCurrencyFundAmount = 50*10e18;\n   uint256 constant MinimumCyrptoCurrencyFundAmount = 50*10e18;\n   uint256 constant MinimumWithdrawalAmount = 50*10e18;\n   address immutable owner;\n\n   \n   mapping(address=>uint256) AddresstoFundedAmount;\n   address[] Funders;\n   \n    constructor(){\n        owner = msg.sender;\n    }\n\n    function ReceiveFunds() public payable{\n        AddresstoFundedAmount[msg.sender] += msg.value;\n        Funders.push(msg.sender);\n    }\n    function WithdrawFunds() public OnlyOwner{}\n\n    receive() external payable{\n        ReceiveFunds();\n    }\n\n    fallback() external payable{\n        ReceiveFunds();\n    }\n\n    modifier OnlyOwner{\n        if(msg.sender!=owner) revert NotOwner();\n        _;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FundmeContract.sol": {
				"FundMe": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NotOwner",
							"type": "error"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "ReceiveFunds",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WithdrawFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundmeContract.sol\":77:849  contract FundMe{... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/FundmeContract.sol\":392:440  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/FundmeContract.sol\":423:433  msg.sender */\n  caller\n    /* \"contracts/FundmeContract.sol\":415:433  owner = msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/FundmeContract.sol\":77:849  contract FundMe{... */\n  shr(0x60, mload(0x80))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x731dc163f73d31d8c68f9917ce4ff967753939f70432973c04fd2c2a48148607\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundmeContract.sol\":77:849  contract FundMe{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4c0aac9a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xca8bcec9\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/FundmeContract.sol\":671:685  ReceiveFunds() */\n      tag_7\n        /* \"contracts/FundmeContract.sol\":671:683  ReceiveFunds */\n      tag_8\n        /* \"contracts/FundmeContract.sol\":671:685  ReceiveFunds() */\n      jump\t// in\n    tag_7:\n        /* \"contracts/FundmeContract.sol\":77:849  contract FundMe{... */\n      stop\n    tag_2:\n        /* \"contracts/FundmeContract.sol\":735:749  ReceiveFunds() */\n      tag_11\n        /* \"contracts/FundmeContract.sol\":735:747  ReceiveFunds */\n      tag_8\n        /* \"contracts/FundmeContract.sol\":735:749  ReceiveFunds() */\n      jump\t// in\n    tag_11:\n        /* \"contracts/FundmeContract.sol\":77:849  contract FundMe{... */\n      stop\n        /* \"contracts/FundmeContract.sol\":586:629  function WithdrawFunds() public OnlyOwner{} */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/FundmeContract.sol\":446:581  function ReceiveFunds() public payable{... */\n    tag_4:\n      tag_15\n      tag_8\n      jump\t// in\n    tag_15:\n      stop\n    tag_8:\n        /* \"contracts/FundmeContract.sol\":531:540  msg.value */\n      callvalue\n        /* \"contracts/FundmeContract.sol\":494:515  AddresstoFundedAmount */\n      0x00\n        /* \"contracts/FundmeContract.sol\":494:527  AddresstoFundedAmount[msg.sender] */\n      dup1\n        /* \"contracts/FundmeContract.sol\":516:526  msg.sender */\n      caller\n        /* \"contracts/FundmeContract.sol\":494:527  AddresstoFundedAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FundmeContract.sol\":494:540  AddresstoFundedAmount[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundmeContract.sol\":550:557  Funders */\n      0x01\n        /* \"contracts/FundmeContract.sol\":563:573  msg.sender */\n      caller\n        /* \"contracts/FundmeContract.sol\":550:574  Funders.push(msg.sender) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundmeContract.sol\":446:581  function ReceiveFunds() public payable{... */\n      jump\t// out\n        /* \"contracts/FundmeContract.sol\":586:629  function WithdrawFunds() public OnlyOwner{} */\n    tag_14:\n        /* \"contracts/FundmeContract.sol\":805:810  owner */\n      immutable(\"0x731dc163f73d31d8c68f9917ce4ff967753939f70432973c04fd2c2a48148607\")\n        /* \"contracts/FundmeContract.sol\":793:810  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundmeContract.sol\":793:803  msg.sender */\n      caller\n        /* \"contracts/FundmeContract.sol\":793:810  msg.sender!=owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/FundmeContract.sol\":790:829  if(msg.sender!=owner) revert NotOwner() */\n      tag_21\n      jumpi\n        /* \"contracts/FundmeContract.sol\":819:829  NotOwner() */\n      mload(0x40)\n      0x30cd747100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FundmeContract.sol\":790:829  if(msg.sender!=owner) revert NotOwner() */\n    tag_21:\n        /* \"contracts/FundmeContract.sol\":586:629  function WithdrawFunds() public OnlyOwner{} */\n      jump\t// out\n        /* \"#utility.yul\":7:312   */\n    tag_18:\n        /* \"#utility.yul\":47:50   */\n      0x00\n        /* \"#utility.yul\":66:86   */\n      tag_25\n        /* \"#utility.yul\":84:85   */\n      dup3\n        /* \"#utility.yul\":66:86   */\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":61:86   */\n      swap2\n      pop\n        /* \"#utility.yul\":100:120   */\n      tag_27\n        /* \"#utility.yul\":118:119   */\n      dup4\n        /* \"#utility.yul\":100:120   */\n      tag_26\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":95:120   */\n      swap3\n      pop\n        /* \"#utility.yul\":254:255   */\n      dup3\n        /* \"#utility.yul\":186:252   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":182:256   */\n      sub\n        /* \"#utility.yul\":179:180   */\n      dup3\n        /* \"#utility.yul\":176:257   */\n      gt\n        /* \"#utility.yul\":173:280   */\n      iszero\n      tag_28\n      jumpi\n        /* \"#utility.yul\":260:278   */\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":173:280   */\n    tag_28:\n        /* \"#utility.yul\":304:305   */\n      dup3\n        /* \"#utility.yul\":301:302   */\n      dup3\n        /* \"#utility.yul\":297:306   */\n      add\n        /* \"#utility.yul\":290:306   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":318:395   */\n    tag_26:\n        /* \"#utility.yul\":355:362   */\n      0x00\n        /* \"#utility.yul\":384:389   */\n      dup2\n        /* \"#utility.yul\":373:389   */\n      swap1\n      pop\n        /* \"#utility.yul\":318:395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":401:581   */\n    tag_30:\n        /* \"#utility.yul\":449:526   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":446:447   */\n      0x00\n        /* \"#utility.yul\":439:527   */\n      mstore\n        /* \"#utility.yul\":546:550   */\n      0x11\n        /* \"#utility.yul\":543:544   */\n      0x04\n        /* \"#utility.yul\":536:551   */\n      mstore\n        /* \"#utility.yul\":570:574   */\n      0x24\n        /* \"#utility.yul\":567:568   */\n      0x00\n        /* \"#utility.yul\":560:575   */\n      revert\n\n    auxdata: 0xa2646970667358221220bac651e5a68d85397f096995cca25e647412aa806a7ef088e2a41c4ea4961a4e64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c61026d6100666000396000610123015261026d6000f3fe60806040526004361061002d5760003560e01c80634c0aac9a14610046578063ca8bcec91461005d5761003c565b3661003c5761003a610067565b005b610044610067565b005b34801561005257600080fd5b5061005b610121565b005b610065610067565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100b591906101a8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a6576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006101b3826101fe565b91506101be836101fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101f3576101f2610208565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220bac651e5a68d85397f096995cca25e647412aa806a7ef088e2a41c4ea4961a4e64736f6c63430008070033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x26D PUSH2 0x66 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x123 ADD MSTORE PUSH2 0x26D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C0AAC9A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xCA8BCEC9 EQ PUSH2 0x5D JUMPI PUSH2 0x3C JUMP JUMPDEST CALLDATASIZE PUSH2 0x3C JUMPI PUSH2 0x3A PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44 PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F3 JUMPI PUSH2 0x1F2 PUSH2 0x208 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC6 MLOAD 0xE5 0xA6 DUP14 DUP6 CODECOPY PUSH32 0x96995CCA25E647412AA806A7EF088E2A41C4EA4961A4E64736F6C6343000807 STOP CALLER ",
							"sourceMap": "77:772:0:-:0;;;392:48;;;;;;;;;;423:10;415:18;;;;;;;;;;;;77:772;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ReceiveFunds_55": {
									"entryPoint": 103,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WithdrawFunds_61": {
									"entryPoint": 289,
									"id": 61,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_68": {
									"entryPoint": null,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_75": {
									"entryPoint": null,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"checked_add_t_uint256": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:584:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "84:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "66:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "66:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "61:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "95:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "118:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "100:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "100:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "95:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "260:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "179:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "186:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "254:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "182:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "182:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "176:81:1"
															},
															"nodeType": "YulIf",
															"src": "173:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "290:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "301:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "304:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "297:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "297:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "290:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "38:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "41:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "47:3:1",
														"type": ""
													}
												],
												"src": "7:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "373:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "384:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "373:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "355:7:1",
														"type": ""
													}
												],
												"src": "318:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "429:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "439:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "439:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "546:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "536:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "536:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "567:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "570:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "401:180:1"
											}
										]
									},
									"contents": "{\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"20": [
									{
										"length": 32,
										"start": 291
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061002d5760003560e01c80634c0aac9a14610046578063ca8bcec91461005d5761003c565b3661003c5761003a610067565b005b610044610067565b005b34801561005257600080fd5b5061005b610121565b005b610065610067565b005b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546100b591906101a8565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a6576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b60006101b3826101fe565b91506101be836101fe565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101f3576101f2610208565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220bac651e5a68d85397f096995cca25e647412aa806a7ef088e2a41c4ea4961a4e64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C0AAC9A EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xCA8BCEC9 EQ PUSH2 0x5D JUMPI PUSH2 0x3C JUMP JUMPDEST CALLDATASIZE PUSH2 0x3C JUMPI PUSH2 0x3A PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x44 PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x121 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x65 PUSH2 0x67 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB5 SWAP2 SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x30CD747100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3 DUP3 PUSH2 0x1FE JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE DUP4 PUSH2 0x1FE JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1F3 JUMPI PUSH2 0x1F2 PUSH2 0x208 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xC6 MLOAD 0xE5 0xA6 DUP14 DUP6 CODECOPY PUSH32 0x96995CCA25E647412AA806A7EF088E2A41C4EA4961A4E64736F6C6343000807 STOP CALLER ",
							"sourceMap": "77:772:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:14;:12;:14::i;:::-;77:772;;735:14;:12;:14::i;:::-;77:772;586:43;;;;;;;;;;;;;:::i;:::-;;446:135;;;:::i;:::-;;;531:9;494:21;:33;516:10;494:33;;;;;;;;;;;;;;;;:46;;;;;;;:::i;:::-;;;;;;;;550:7;563:10;550:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:135::o;586:43::-;805:5;793:17;;:10;:17;;;790:39;;819:10;;;;;;;;;;;;;;790:39;586:43::o;7:305:1:-;47:3;66:20;84:1;66:20;:::i;:::-;61:25;;100:20;118:1;100:20;:::i;:::-;95:25;;254:1;186:66;182:74;179:1;176:81;173:107;;;260:18;;:::i;:::-;173:107;304:1;301;297:9;290:16;;7:305;;;;:::o;318:77::-;355:7;384:5;373:16;;318:77;;;:::o;401:180::-;449:77;446:1;439:88;546:4;543:1;536:15;570:4;567:1;560:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "124200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"ReceiveFunds()": "infinite",
								"WithdrawFunds()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 440,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 392,
									"end": 440,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 392,
									"end": 440,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 392,
									"end": 440,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 423,
									"end": 433,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 415,
									"end": 433,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 415,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 415,
									"end": 433,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 415,
									"end": 433,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 415,
									"end": 433,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 77,
									"end": 849,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bac651e5a68d85397f096995cca25e647412aa806a7ef088e2a41c4ea4961a4e64736f6c63430008070033",
									".code": [
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "4C0AAC9A"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH",
											"source": 0,
											"value": "CA8BCEC9"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 671,
											"end": 685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 671,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 671,
											"end": 685,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 671,
											"end": 685,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 671,
											"end": 685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77,
											"end": 849,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 735,
											"end": 747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 735,
											"end": 749,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 735,
											"end": 749,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 735,
											"end": 749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77,
											"end": 849,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 446,
											"end": 581,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 531,
											"end": 540,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 516,
											"end": 526,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 527,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 494,
											"end": 527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 494,
											"end": 540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 494,
											"end": 540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 494,
											"end": 540,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 494,
											"end": 540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 494,
											"end": 540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 557,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 563,
											"end": 573,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 550,
											"end": 574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 550,
											"end": 574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 581,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 805,
											"end": 810,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 793,
											"end": 803,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 793,
											"end": 810,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 793,
											"end": 810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 790,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 790,
											"end": 829,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "30CD747100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 829,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 819,
											"end": 829,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 790,
											"end": 829,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 790,
											"end": 829,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 586,
											"end": 629,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 47,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 84,
											"end": 85,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 66,
											"end": 86,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 61,
											"end": 86,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 118,
											"end": 119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 100,
											"end": 120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 100,
											"end": 120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 95,
											"end": 120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 254,
											"end": 255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 186,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 182,
											"end": 256,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 179,
											"end": 180,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 176,
											"end": 257,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 260,
											"end": 278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 280,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 173,
											"end": 280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 304,
											"end": 305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 301,
											"end": 302,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 297,
											"end": 306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 290,
											"end": 306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 312,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 355,
											"end": 362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 373,
											"end": 389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 318,
											"end": 395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 401,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 449,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 446,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 546,
											"end": 550,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 536,
											"end": 551,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 570,
											"end": 574,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 567,
											"end": 568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 575,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ReceiveFunds()": "ca8bcec9",
							"WithdrawFunds()": "4c0aac9a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"ReceiveFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WithdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundmeContract.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundmeContract.sol\":{\"keccak256\":\"0x0b2d26b68104673d92fe8be9655fd3370a41c72d0d459d2eb4b13c0865fa68f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e76567e6b67832a0c54436967d0321f9a263d486cf6490ca42d2719b4e6575f6\",\"dweb:/ipfs/QmPAUQWwWosXwoD9bYahneYYygZXpV715Hm7o3pGagdQPG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/FundmeContract.sol:FundMe",
								"label": "AddresstoFundedAmount",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 27,
								"contract": "contracts/FundmeContract.sol:FundMe",
								"label": "Funders",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_address)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/FundmeContract.sol": {
				"ast": {
					"absolutePath": "contracts/FundmeContract.sol",
					"exportedSymbols": {
						"FundMe": [
							88
						],
						"NotOwner": [
							3
						]
					},
					"id": 89,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "31:23:0"
						},
						{
							"id": 3,
							"name": "NotOwner",
							"nameLocation": "64:8:0",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 2,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "72:2:0"
							},
							"src": "58:17:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 88,
							"linearizedBaseContracts": [
								88
							],
							"name": "FundMe",
							"nameLocation": "86:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "MinimumLocalCurrencyFundAmount",
									"nameLocation": "114:30:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "97:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "97:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										},
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "147:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3130653138",
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "150:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000000000000_by_1",
												"typeString": "int_const 10000000000000000000"
											},
											"value": "10e18"
										},
										"src": "147:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "MinimumCyrptoCurrencyFundAmount",
									"nameLocation": "177:31:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "160:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "160:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "211:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3130653138",
											"id": 11,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "214:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000000000000_by_1",
												"typeString": "int_const 10000000000000000000"
											},
											"value": "10e18"
										},
										"src": "211:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 18,
									"mutability": "constant",
									"name": "MinimumWithdrawalAmount",
									"nameLocation": "241:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "224:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "224:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										},
										"id": 17,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 15,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "267:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "3130653138",
											"id": 16,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "270:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000000000000000_by_1",
												"typeString": "int_const 10000000000000000000"
											},
											"value": "10e18"
										},
										"src": "267:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "immutable",
									"name": "owner",
									"nameLocation": "298:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "280:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "280:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "AddresstoFundedAmount",
									"nameLocation": "339:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "313:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "321:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "313:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "330:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "Funders",
									"nameLocation": "375:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 88,
									"src": "365:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 25,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "365:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 26,
										"nodeType": "ArrayTypeName",
										"src": "365:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "405:35:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 30,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "415:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 31,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "423:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "423:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "415:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "415:18:0"
											}
										]
									},
									"id": 36,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "403:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:0:0"
									},
									"scope": 88,
									"src": "392:48:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "484:97:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 39,
															"name": "AddresstoFundedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "494:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 42,
														"indexExpression": {
															"expression": {
																"id": 40,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "516:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "516:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "494:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 43,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "531:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "531:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "494:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "494:46:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 50,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "563:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "563:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 47,
															"name": "Funders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "550:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "550:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "550:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "550:24:0"
											}
										]
									},
									"functionSelector": "ca8bcec9",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ReceiveFunds",
									"nameLocation": "455:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "484:0:0"
									},
									"scope": 88,
									"src": "446:135:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "627:2:0",
										"statements": []
									},
									"functionSelector": "4c0aac9a",
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "OnlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "618:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "618:9:0"
										}
									],
									"name": "WithdrawFunds",
									"nameLocation": "595:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:0:0"
									},
									"scope": 88,
									"src": "586:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "661:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 64,
														"name": "ReceiveFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "671:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "671:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "671:14:0"
											}
										]
									},
									"id": 68,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "661:0:0"
									},
									"scope": 88,
									"src": "635:57:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 74,
										"nodeType": "Block",
										"src": "725:31:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 71,
														"name": "ReceiveFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 55,
														"src": "735:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "735:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "735:14:0"
											}
										]
									},
									"id": 75,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:0:0"
									},
									"scope": 88,
									"src": "698:58:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "780:67:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 77,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "793:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "793:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 79,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "805:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "793:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "790:39:0",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 81,
															"name": "NotOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "819:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "819:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 83,
													"nodeType": "RevertStatement",
													"src": "812:17:0"
												}
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "839:1:0"
											}
										]
									},
									"id": 87,
									"name": "OnlyOwner",
									"nameLocation": "771:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:0"
									},
									"src": "762:85:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 89,
							"src": "77:772:0",
							"usedErrors": [
								3
							]
						}
					],
					"src": "31:818:0"
				},
				"id": 0
			}
		}
	}
}